// ---------------------------------------------------------------------
// ðŸ”’ AUTOGENERATED @synergy-design-system/react wrappers for @synergy-design-system/components
// Please do not edit this file directly!
// It will get recreated when running pnpm build.
// ---------------------------------------------------------------------

import type { DOMAttributes } from 'react';
import type {
  SynShowEvent,
  SynAfterShowEvent,
  SynHideEvent,
  SynAfterHideEvent,
  SynBlurEvent,
  SynFocusEvent,
  SynInvalidEvent,
  SynChangeEvent,
  SynInputEvent,
  SynClearEvent,
  SynErrorEvent,
  SynInitialFocusEvent,
  SynRequestCloseEvent,
  SynBurgerMenuClosedEvent,
  SynBurgerMenuHiddenEvent,
  SynBurgerMenuOpenEvent,
  SynLoadEvent,
  SynSelectEvent,
  SynRepositionEvent,
  SynMoveEvent,
  SynCloseEvent,
  SynTabShowEvent,
  SynTabHideEvent,
  SynRemoveEvent,
  SynAccordion,
  SynAlert,
  SynBadge,
  SynBreadcrumb,
  SynBreadcrumbItem,
  SynButton,
  SynButtonGroup,
  SynCard,
  SynCheckbox,
  SynCombobox,
  SynDetails,
  SynDialog,
  SynDivider,
  SynDrawer,
  SynDropdown,
  SynFile,
  SynHeader,
  SynIcon,
  SynIconButton,
  SynInput,
  SynMenu,
  SynMenuItem,
  SynMenuLabel,
  SynNavItem,
  SynOptgroup,
  SynOption,
  SynPopup,
  SynPrioNav,
  SynProgressBar,
  SynProgressRing,
  SynRadio,
  SynRadioButton,
  SynRadioGroup,
  SynRange,
  SynRangeTick,
  SynSelect,
  SynSideNav,
  SynSpinner,
  SynSwitch,
  SynTab,
  SynTabGroup,
  SynTabPanel,
  SynTag,
  SynTextarea,
  SynTooltip,
  SynValidate,
} from '@synergy-design-system/components';

/**
 * Used core types
 * @see https://coryrylan.com/blog/how-to-use-web-components-with-typescript-and-react
 */

type SynEventTuple = [string, unknown];

type SynEventMap<T extends SynEventTuple[]> = {
  [K in T[number] as `on${K[0]}`]: (event: K[1]) => void;
};

export type SynCustomElement<
  SynElement extends HTMLElement,
  Events extends SynEventTuple[] = [],
> = Partial<
  SynElement &
    DOMAttributes<SynElement> & {
      children?: any;
      key?: any;
    } & SynEventMap<Events>
>;

declare module 'react' {
  namespace JSX {
    interface IntrinsicElements {
      'syn-accordion': SynCustomElement<SynAccordion, []>;
      'syn-alert': SynCustomElement<
        SynAlert,
        [
          ['syn-show', SynShowEvent],
          ['syn-after-show', SynAfterShowEvent],
          ['syn-hide', SynHideEvent],
          ['syn-after-hide', SynAfterHideEvent],
        ]
      >;
      'syn-badge': SynCustomElement<SynBadge, []>;
      'syn-breadcrumb': SynCustomElement<SynBreadcrumb, []>;
      'syn-breadcrumb-item': SynCustomElement<SynBreadcrumbItem, []>;
      'syn-button': SynCustomElement<
        SynButton,
        [
          ['syn-blur', SynBlurEvent],
          ['syn-focus', SynFocusEvent],
          ['syn-invalid', SynInvalidEvent],
        ]
      >;
      'syn-button-group': SynCustomElement<SynButtonGroup, []>;
      'syn-card': SynCustomElement<SynCard, []>;
      'syn-checkbox': SynCustomElement<
        SynCheckbox,
        [
          ['syn-blur', SynBlurEvent],
          ['syn-change', SynChangeEvent],
          ['syn-focus', SynFocusEvent],
          ['syn-input', SynInputEvent],
          ['syn-invalid', SynInvalidEvent],
        ]
      >;
      'syn-combobox': SynCustomElement<
        SynCombobox,
        [
          ['syn-change', SynChangeEvent],
          ['syn-clear', SynClearEvent],
          ['syn-input', SynInputEvent],
          ['syn-focus', SynFocusEvent],
          ['syn-blur', SynBlurEvent],
          ['syn-show', SynShowEvent],
          ['syn-after-show', SynAfterShowEvent],
          ['syn-hide', SynHideEvent],
          ['syn-after-hide', SynAfterHideEvent],
          ['syn-invalid', SynInvalidEvent],
          ['syn-error', SynErrorEvent],
        ]
      >;
      'syn-details': SynCustomElement<
        SynDetails,
        [
          ['syn-show', SynShowEvent],
          ['syn-after-show', SynAfterShowEvent],
          ['syn-hide', SynHideEvent],
          ['syn-after-hide', SynAfterHideEvent],
        ]
      >;
      'syn-dialog': SynCustomElement<
        SynDialog,
        [
          ['syn-show', SynShowEvent],
          ['syn-after-show', SynAfterShowEvent],
          ['syn-hide', SynHideEvent],
          ['syn-after-hide', SynAfterHideEvent],
          ['syn-initial-focus', SynInitialFocusEvent],
          ['syn-request-close', SynRequestCloseEvent],
        ]
      >;
      'syn-divider': SynCustomElement<SynDivider, []>;
      'syn-drawer': SynCustomElement<
        SynDrawer,
        [
          ['syn-show', SynShowEvent],
          ['syn-after-show', SynAfterShowEvent],
          ['syn-hide', SynHideEvent],
          ['syn-after-hide', SynAfterHideEvent],
          ['syn-initial-focus', SynInitialFocusEvent],
          ['syn-request-close', SynRequestCloseEvent],
        ]
      >;
      'syn-dropdown': SynCustomElement<
        SynDropdown,
        [
          ['syn-show', SynShowEvent],
          ['syn-after-show', SynAfterShowEvent],
          ['syn-hide', SynHideEvent],
          ['syn-after-hide', SynAfterHideEvent],
        ]
      >;
      'syn-file': SynCustomElement<
        SynFile,
        [
          ['syn-blur', SynBlurEvent],
          ['syn-change', SynChangeEvent],
          ['syn-error', SynErrorEvent],
          ['syn-focus', SynFocusEvent],
          ['syn-input', SynInputEvent],
        ]
      >;
      'syn-header': SynCustomElement<
        SynHeader,
        [
          ['syn-burger-menu-closed', SynBurgerMenuClosedEvent],
          ['syn-burger-menu-hidden', SynBurgerMenuHiddenEvent],
          ['syn-burger-menu-open', SynBurgerMenuOpenEvent],
        ]
      >;
      'syn-icon': SynCustomElement<
        SynIcon,
        [['syn-load', SynLoadEvent], ['syn-error', SynErrorEvent]]
      >;
      'syn-icon-button': SynCustomElement<
        SynIconButton,
        [['syn-blur', SynBlurEvent], ['syn-focus', SynFocusEvent]]
      >;
      'syn-input': SynCustomElement<
        SynInput,
        [
          ['syn-blur', SynBlurEvent],
          ['syn-change', SynChangeEvent],
          ['syn-clear', SynClearEvent],
          ['syn-focus', SynFocusEvent],
          ['syn-input', SynInputEvent],
          ['syn-invalid', SynInvalidEvent],
        ]
      >;
      'syn-menu': SynCustomElement<SynMenu, [['syn-select', SynSelectEvent]]>;
      'syn-menu-item': SynCustomElement<SynMenuItem, []>;
      'syn-menu-label': SynCustomElement<SynMenuLabel, []>;
      'syn-nav-item': SynCustomElement<
        SynNavItem,
        [
          ['syn-show', SynShowEvent],
          ['syn-hide', SynHideEvent],
          ['syn-blur', SynBlurEvent],
          ['syn-focus', SynFocusEvent],
        ]
      >;
      'syn-optgroup': SynCustomElement<SynOptgroup, []>;
      'syn-option': SynCustomElement<SynOption, []>;
      'syn-popup': SynCustomElement<
        SynPopup,
        [['syn-reposition', SynRepositionEvent]]
      >;
      'syn-prio-nav': SynCustomElement<SynPrioNav, []>;
      'syn-progress-bar': SynCustomElement<SynProgressBar, []>;
      'syn-progress-ring': SynCustomElement<SynProgressRing, []>;
      'syn-radio': SynCustomElement<
        SynRadio,
        [['syn-blur', SynBlurEvent], ['syn-focus', SynFocusEvent]]
      >;
      'syn-radio-button': SynCustomElement<
        SynRadioButton,
        [['syn-blur', SynBlurEvent], ['syn-focus', SynFocusEvent]]
      >;
      'syn-radio-group': SynCustomElement<
        SynRadioGroup,
        [
          ['syn-change', SynChangeEvent],
          ['syn-input', SynInputEvent],
          ['syn-invalid', SynInvalidEvent],
        ]
      >;
      'syn-range': SynCustomElement<
        SynRange,
        [
          ['syn-blur', SynBlurEvent],
          ['syn-change', SynChangeEvent],
          ['syn-focus', SynFocusEvent],
          ['syn-input', SynInputEvent],
          ['syn-invalid', SynInvalidEvent],
          ['syn-move', SynMoveEvent],
        ]
      >;
      'syn-range-tick': SynCustomElement<SynRangeTick, []>;
      'syn-select': SynCustomElement<
        SynSelect,
        [
          ['syn-change', SynChangeEvent],
          ['syn-clear', SynClearEvent],
          ['syn-input', SynInputEvent],
          ['syn-focus', SynFocusEvent],
          ['syn-blur', SynBlurEvent],
          ['syn-show', SynShowEvent],
          ['syn-after-show', SynAfterShowEvent],
          ['syn-hide', SynHideEvent],
          ['syn-after-hide', SynAfterHideEvent],
          ['syn-invalid', SynInvalidEvent],
        ]
      >;
      'syn-side-nav': SynCustomElement<
        SynSideNav,
        [
          ['syn-show', SynShowEvent],
          ['syn-after-show', SynAfterShowEvent],
          ['syn-hide', SynHideEvent],
          ['syn-after-hide', SynAfterHideEvent],
        ]
      >;
      'syn-spinner': SynCustomElement<SynSpinner, []>;
      'syn-switch': SynCustomElement<
        SynSwitch,
        [
          ['syn-blur', SynBlurEvent],
          ['syn-change', SynChangeEvent],
          ['syn-input', SynInputEvent],
          ['syn-focus', SynFocusEvent],
          ['syn-invalid', SynInvalidEvent],
        ]
      >;
      'syn-tab': SynCustomElement<SynTab, [['syn-close', SynCloseEvent]]>;
      'syn-tab-group': SynCustomElement<
        SynTabGroup,
        [['syn-tab-show', SynTabShowEvent], ['syn-tab-hide', SynTabHideEvent]]
      >;
      'syn-tab-panel': SynCustomElement<SynTabPanel, []>;
      'syn-tag': SynCustomElement<SynTag, [['syn-remove', SynRemoveEvent]]>;
      'syn-textarea': SynCustomElement<
        SynTextarea,
        [
          ['syn-blur', SynBlurEvent],
          ['syn-change', SynChangeEvent],
          ['syn-focus', SynFocusEvent],
          ['syn-input', SynInputEvent],
          ['syn-invalid', SynInvalidEvent],
        ]
      >;
      'syn-tooltip': SynCustomElement<
        SynTooltip,
        [
          ['syn-show', SynShowEvent],
          ['syn-after-show', SynAfterShowEvent],
          ['syn-hide', SynHideEvent],
          ['syn-after-hide', SynAfterHideEvent],
        ]
      >;
      'syn-validate': SynCustomElement<SynValidate, []>;
    }
  }
}
