{"schemaVersion":"1.0.0","readme":"","modules":[{"kind":"javascript-module","path":"../components/src/components/button/button.js","declarations":[{"kind":"class","description":"","name":"SynButton","cssParts":[{"description":"The component's base wrapper.","name":"base"},{"description":"The container that wraps the prefix.","name":"prefix"},{"description":"The button's label.","name":"label"},{"description":"The container that wraps the suffix.","name":"suffix"},{"description":"The button's caret icon, an `<syn-icon>` element.","name":"caret"},{"description":"The spinner that shows when the button is in the loading state.","name":"spinner"}],"slots":[{"description":"The button's label.","name":""},{"description":"A presentational prefix icon or similar element.","name":"prefix"},{"description":"A presentational suffix icon or similar element.","name":"suffix"}],"members":[{"kind":"field","name":"dependencies","type":{"text":"object"},"static":true,"default":"{\n    'syn-icon': SynIcon,\n    'syn-spinner': SynSpinner\n  }"},{"kind":"field","name":"formControlController","privacy":"private","default":"new FormControlController(this, {\n    form: input => {\n      // Buttons support a form attribute that points to an arbitrary form, so if this attribute is set we need to query\n      // the form from the same root using its id\n      if (input.hasAttribute('form')) {\n        const doc = input.getRootNode() as Document | ShadowRoot;\n        const formId = input.getAttribute('form')!;\n        return doc.getElementById(formId) as HTMLFormElement;\n      }\n\n      // Fall back to the closest containing form\n      return input.closest('form');\n    },\n    assumeInteractionOn: ['click']\n  })"},{"kind":"field","name":"hasSlotController","privacy":"private","default":"new HasSlotController(this, '[default]', 'prefix', 'suffix')"},{"kind":"field","name":"localize","privacy":"private","default":"new LocalizeController(this)"},{"kind":"field","name":"button","type":{"text":"HTMLButtonElement | HTMLLinkElement"}},{"kind":"field","name":"hasFocus","type":{"text":"boolean"},"privacy":"private","default":"false"},{"kind":"field","name":"invalid","type":{"text":"boolean"},"default":"false"},{"kind":"field","name":"title","type":{"text":"string"},"default":"''","attribute":"title"},{"kind":"field","name":"variant","type":{"text":"'default' | 'primary' | 'success' | 'neutral' | 'warning' | 'danger' | 'text'"},"default":"'default'","description":"The button's theme variant.","attribute":"variant","reflects":true},{"kind":"field","name":"size","type":{"text":"'small' | 'medium' | 'large'"},"default":"'medium'","description":"The button's size.","attribute":"size","reflects":true},{"kind":"field","name":"caret","type":{"text":"boolean"},"default":"false","description":"Draws the button with a caret. Used to indicate that the button triggers a dropdown menu or similar behavior.","attribute":"caret","reflects":true},{"kind":"field","name":"disabled","type":{"text":"boolean"},"default":"false","description":"Disables the button.","attribute":"disabled","reflects":true},{"kind":"field","name":"loading","type":{"text":"boolean"},"default":"false","description":"Draws the button in a loading state.","attribute":"loading","reflects":true},{"kind":"field","name":"outline","type":{"text":"boolean"},"default":"false","description":"Draws an outlined button.","attribute":"outline","reflects":true},{"kind":"field","name":"pill","type":{"text":"boolean"},"default":"false","description":"Draws a pill-style button with rounded edges.","attribute":"pill","reflects":true},{"kind":"field","name":"circle","type":{"text":"boolean"},"default":"false","description":"Draws a circular icon button. When this attribute is present, the button expects a single `<syn-icon>` in the\ndefault slot.","attribute":"circle","reflects":true},{"kind":"field","name":"type","type":{"text":"'button' | 'submit' | 'reset'"},"default":"'button'","description":"The type of button. Note that the default value is `button` instead of `submit`, which is opposite of how native\n`<button>` elements behave. When the type is `submit`, the button will submit the surrounding form.","attribute":"type"},{"kind":"field","name":"name","type":{"text":"string"},"default":"''","description":"The name of the button, submitted as a name/value pair with form data, but only when this button is the submitter.\nThis attribute is ignored when `href` is present.","attribute":"name"},{"kind":"field","name":"value","type":{"text":"string"},"default":"''","description":"The value of the button, submitted as a pair with the button's name as part of the form data, but only when this\nbutton is the submitter. This attribute is ignored when `href` is present.","attribute":"value"},{"kind":"field","name":"href","type":{"text":"string"},"default":"''","description":"When set, the underlying button will be rendered as an `<a>` with this `href` instead of a `<button>`.","attribute":"href"},{"kind":"field","name":"target","type":{"text":"'_blank' | '_parent' | '_self' | '_top'"},"description":"Tells the browser where to open the link. Only used when `href` is present.","attribute":"target"},{"kind":"field","name":"rel","type":{"text":"string"},"default":"'noreferrer noopener'","description":"When using `href`, this attribute will map to the underlying link's `rel` attribute. Unlike regular links, the\ndefault is `noreferrer noopener` to prevent security exploits. However, if you're using `target` to point to a\nspecific tab/window, this will prevent that from working correctly. You can remove or change the default value by\nsetting the attribute to an empty string or a value of your choice, respectively.","attribute":"rel"},{"kind":"field","name":"download","type":{"text":"string | undefined"},"description":"Tells the browser to download the linked file as this filename. Only used when `href` is present.","attribute":"download"},{"kind":"field","name":"form","type":{"text":"string"},"description":"The \"form owner\" to associate the button with. If omitted, the closest containing form will be used instead. The\nvalue of this attribute must be an id of a form in the same document or shadow root as the button.","attribute":"form"},{"kind":"field","name":"formAction","type":{"text":"string"},"description":"Used to override the form owner's `action` attribute.","attribute":"formaction"},{"kind":"field","name":"formEnctype","type":{"text":"'application/x-www-form-urlencoded' | 'multipart/form-data' | 'text/plain'"},"description":"Used to override the form owner's `enctype` attribute.","attribute":"formenctype"},{"kind":"field","name":"formMethod","type":{"text":"'post' | 'get'"},"description":"Used to override the form owner's `method` attribute.","attribute":"formmethod"},{"kind":"field","name":"formNoValidate","type":{"text":"boolean"},"description":"Used to override the form owner's `novalidate` attribute.","attribute":"formnovalidate"},{"kind":"field","name":"formTarget","type":{"text":"'_self' | '_blank' | '_parent' | '_top' | string"},"description":"Used to override the form owner's `target` attribute.","attribute":"formtarget"},{"kind":"field","name":"validity","description":"Gets the validity state object"},{"kind":"field","name":"validationMessage","description":"Gets the validation message"},{"kind":"method","name":"handleBlur","privacy":"private"},{"kind":"method","name":"handleFocus","privacy":"private"},{"kind":"method","name":"handleClick","privacy":"private"},{"kind":"method","name":"handleInvalid","privacy":"private","parameters":[{"name":"event","type":{"text":"Event"}}]},{"kind":"method","name":"isButton","privacy":"private"},{"kind":"method","name":"isLink","privacy":"private"},{"kind":"method","name":"handleDisabledChange"},{"kind":"method","name":"click","description":"Simulates a click on the button."},{"kind":"method","name":"focus","parameters":[{"name":"options","optional":true,"type":{"text":"FocusOptions"}}],"description":"Sets focus on the button."},{"kind":"method","name":"blur","description":"Removes focus from the button."},{"kind":"method","name":"checkValidity","description":"Checks for validity but does not show a validation message. Returns `true` when valid and `false` when invalid."},{"kind":"method","name":"getForm","return":{"type":{"text":"HTMLFormElement | null"}},"description":"Gets the associated form, if one exists."},{"kind":"method","name":"reportValidity","description":"Checks for validity and shows the browser's validation message if the control is invalid."},{"kind":"method","name":"setCustomValidity","parameters":[{"name":"message","type":{"text":"string"}}],"description":"Sets a custom validation message. Pass an empty string to restore validity."}],"events":[{"description":"Emitted when the button loses focus.","name":"syn-blur"},{"description":"Emitted when the button gains focus.","name":"syn-focus"},{"description":"Emitted when the form control has been checked for validity and its constraints aren't satisfied.","name":"syn-invalid"}],"attributes":[{"name":"title","type":{"text":"string"},"default":"''","fieldName":"title"},{"name":"variant","type":{"text":"'default' | 'primary' | 'success' | 'neutral' | 'warning' | 'danger' | 'text'"},"default":"'default'","description":"The button's theme variant.","fieldName":"variant"},{"name":"size","type":{"text":"'small' | 'medium' | 'large'"},"default":"'medium'","description":"The button's size.","fieldName":"size"},{"name":"caret","type":{"text":"boolean"},"default":"false","description":"Draws the button with a caret. Used to indicate that the button triggers a dropdown menu or similar behavior.","fieldName":"caret"},{"name":"disabled","type":{"text":"boolean"},"default":"false","description":"Disables the button.","fieldName":"disabled"},{"name":"loading","type":{"text":"boolean"},"default":"false","description":"Draws the button in a loading state.","fieldName":"loading"},{"name":"outline","type":{"text":"boolean"},"default":"false","description":"Draws an outlined button.","fieldName":"outline"},{"name":"pill","type":{"text":"boolean"},"default":"false","description":"Draws a pill-style button with rounded edges.","fieldName":"pill"},{"name":"circle","type":{"text":"boolean"},"default":"false","description":"Draws a circular icon button. When this attribute is present, the button expects a single `<syn-icon>` in the\ndefault slot.","fieldName":"circle"},{"name":"type","type":{"text":"'button' | 'submit' | 'reset'"},"default":"'button'","description":"The type of button. Note that the default value is `button` instead of `submit`, which is opposite of how native\n`<button>` elements behave. When the type is `submit`, the button will submit the surrounding form.","fieldName":"type"},{"name":"name","type":{"text":"string"},"default":"''","description":"The name of the button, submitted as a name/value pair with form data, but only when this button is the submitter.\nThis attribute is ignored when `href` is present.","fieldName":"name"},{"name":"value","type":{"text":"string"},"default":"''","description":"The value of the button, submitted as a pair with the button's name as part of the form data, but only when this\nbutton is the submitter. This attribute is ignored when `href` is present.","fieldName":"value"},{"name":"href","type":{"text":"string"},"default":"''","description":"When set, the underlying button will be rendered as an `<a>` with this `href` instead of a `<button>`.","fieldName":"href"},{"name":"target","type":{"text":"'_blank' | '_parent' | '_self' | '_top'"},"description":"Tells the browser where to open the link. Only used when `href` is present.","fieldName":"target"},{"name":"rel","type":{"text":"string"},"default":"'noreferrer noopener'","description":"When using `href`, this attribute will map to the underlying link's `rel` attribute. Unlike regular links, the\ndefault is `noreferrer noopener` to prevent security exploits. However, if you're using `target` to point to a\nspecific tab/window, this will prevent that from working correctly. You can remove or change the default value by\nsetting the attribute to an empty string or a value of your choice, respectively.","fieldName":"rel"},{"name":"download","type":{"text":"string | undefined"},"description":"Tells the browser to download the linked file as this filename. Only used when `href` is present.","fieldName":"download"},{"name":"form","type":{"text":"string"},"description":"The \"form owner\" to associate the button with. If omitted, the closest containing form will be used instead. The\nvalue of this attribute must be an id of a form in the same document or shadow root as the button.","fieldName":"form"},{"name":"formaction","type":{"text":"string"},"description":"Used to override the form owner's `action` attribute.","fieldName":"formAction"},{"name":"formenctype","type":{"text":"'application/x-www-form-urlencoded' | 'multipart/form-data' | 'text/plain'"},"description":"Used to override the form owner's `enctype` attribute.","fieldName":"formEnctype"},{"name":"formmethod","type":{"text":"'post' | 'get'"},"description":"Used to override the form owner's `method` attribute.","fieldName":"formMethod"},{"name":"formnovalidate","type":{"text":"boolean"},"description":"Used to override the form owner's `novalidate` attribute.","fieldName":"formNoValidate"},{"name":"formtarget","type":{"text":"'_self' | '_blank' | '_parent' | '_top' | string"},"description":"Used to override the form owner's `target` attribute.","fieldName":"formTarget"}],"superclass":{"name":"SynergyElement","module":"/components/src/internal/synergy-element.js"},"summary":"Buttons represent actions that are available to the user.","tagNameWithoutPrefix":"button","tagName":"syn-button","customElement":true,"jsDoc":"/**\n * @summary Buttons represent actions that are available to the user.\n * @documentation https://synergy.style/components/button\n * @status stable\n * @since 2.0\n *\n * @dependency syn-icon\n * @dependency syn-spinner\n *\n * @event syn-blur - Emitted when the button loses focus.\n * @event syn-focus - Emitted when the button gains focus.\n * @event syn-invalid - Emitted when the form control has been checked for validity and its constraints aren't satisfied.\n *\n * @slot - The button's label.\n * @slot prefix - A presentational prefix icon or similar element.\n * @slot suffix - A presentational suffix icon or similar element.\n *\n * @csspart base - The component's base wrapper.\n * @csspart prefix - The container that wraps the prefix.\n * @csspart label - The button's label.\n * @csspart suffix - The container that wraps the suffix.\n * @csspart caret - The button's caret icon, an `<syn-icon>` element.\n * @csspart spinner - The spinner that shows when the button is in the loading state.\n */","documentation":"https://synergy.style/components/button","status":"stable","since":"2.0","dependencies":["syn-icon","syn-spinner"]}],"exports":[{"kind":"js","name":"default","declaration":{"name":"SynButton","module":"../components/src/components/button/button.js"}}]},{"kind":"javascript-module","path":"../components/src/components/icon/icon.js","declarations":[{"kind":"class","description":"","name":"SynIcon","cssParts":[{"description":"The internal SVG element.","name":"svg"},{"description":"The <use> element generated when using `spriteSheet: true`","name":"use"}],"members":[{"kind":"field","name":"initialRender","type":{"text":"boolean"},"privacy":"private","default":"false"},{"kind":"method","name":"resolveIcon","privacy":"private","return":{"type":{"text":"Promise<SVGResult>"}},"parameters":[{"name":"url","type":{"text":"string"}},{"name":"library","optional":true,"type":{"text":"IconLibrary"}}],"description":"Given a URL, this function returns the resulting SVG element or an appropriate error symbol."},{"kind":"field","name":"svg","type":{"text":"SVGElement | HTMLTemplateResult | null"},"privacy":"private","default":"null"},{"kind":"field","name":"name","type":{"text":"string | undefined"},"description":"The name of the icon to draw. Available names depend on the icon library being used.","attribute":"name","reflects":true},{"kind":"field","name":"src","type":{"text":"string | undefined"},"description":"An external URL of an SVG file. Be sure you trust the content you are including, as it will be executed as code and\ncan result in XSS attacks.","attribute":"src"},{"kind":"field","name":"label","type":{"text":"string"},"default":"''","description":"An alternate description to use for assistive devices. If omitted, the icon will be considered presentational and\nignored by assistive devices.","attribute":"label"},{"kind":"field","name":"library","type":{"text":"string"},"default":"'default'","description":"The name of a registered custom icon library.","attribute":"library","reflects":true},{"kind":"method","name":"getIconSource","privacy":"private","return":{"type":{"text":"IconSource"}}},{"kind":"method","name":"handleLabelChange"},{"kind":"method","name":"setIcon"}],"events":[{"description":"Emitted when the icon has loaded. When using `spriteSheet: true` this will not emit.","name":"syn-load"},{"description":"Emitted when the icon fails to load due to an error. When using `spriteSheet: true` this will not emit.","name":"syn-error"}],"attributes":[{"name":"name","type":{"text":"string | undefined"},"description":"The name of the icon to draw. Available names depend on the icon library being used.","fieldName":"name"},{"name":"src","type":{"text":"string | undefined"},"description":"An external URL of an SVG file. Be sure you trust the content you are including, as it will be executed as code and\ncan result in XSS attacks.","fieldName":"src"},{"name":"label","type":{"text":"string"},"default":"''","description":"An alternate description to use for assistive devices. If omitted, the icon will be considered presentational and\nignored by assistive devices.","fieldName":"label"},{"name":"library","type":{"text":"string"},"default":"'default'","description":"The name of a registered custom icon library.","fieldName":"library"}],"superclass":{"name":"SynergyElement","module":"/components/src/internal/synergy-element.js"},"summary":"Icons are symbols that can be used to represent various options within an application.","tagNameWithoutPrefix":"icon","tagName":"syn-icon","customElement":true,"jsDoc":"/**\n * @summary Icons are symbols that can be used to represent various options within an application.\n * @documentation https://synergy.style/components/icon\n * @status stable\n * @since 2.0\n *\n * @event syn-load - Emitted when the icon has loaded. When using `spriteSheet: true` this will not emit.\n * @event syn-error - Emitted when the icon fails to load due to an error. When using `spriteSheet: true` this will not emit.\n *\n * @csspart svg - The internal SVG element.\n * @csspart use - The <use> element generated when using `spriteSheet: true`\n */","documentation":"https://synergy.style/components/icon","status":"stable","since":"2.0"}],"exports":[{"kind":"js","name":"default","declaration":{"name":"SynIcon","module":"../components/src/components/icon/icon.js"}}]},{"kind":"javascript-module","path":"../components/src/components/input/input.js","declarations":[{"kind":"class","description":"","name":"SynInput","cssParts":[{"description":"The form control that wraps the label, input, and help text.","name":"form-control"},{"description":"The label's wrapper.","name":"form-control-label"},{"description":"The input's wrapper.","name":"form-control-input"},{"description":"The help text's wrapper.","name":"form-control-help-text"},{"description":"The component's base wrapper.","name":"base"},{"description":"The internal `<input>` control.","name":"input"},{"description":"The container that wraps the prefix.","name":"prefix"},{"description":"The clear button.","name":"clear-button"},{"description":"The password toggle button.","name":"password-toggle-button"},{"description":"The container that wraps the suffix.","name":"suffix"}],"slots":[{"description":"The input's label. Alternatively, you can use the `label` attribute.","name":"label"},{"description":"Used to prepend a presentational icon or similar element to the input.","name":"prefix"},{"description":"Used to append a presentational icon or similar element to the input.","name":"suffix"},{"description":"An icon to use in lieu of the default clear icon.","name":"clear-icon"},{"description":"An icon to use in lieu of the default show password icon.","name":"show-password-icon"},{"description":"An icon to use in lieu of the default hide password icon.","name":"hide-password-icon"},{"description":"Text that describes how to use the input. Alternatively, you can use the `help-text` attribute.","name":"help-text"}],"members":[{"kind":"field","name":"dependencies","type":{"text":"object"},"static":true,"default":"{ 'syn-icon': SynIcon }"},{"kind":"field","name":"formControlController","privacy":"private","default":"new FormControlController(this, {\n    assumeInteractionOn: ['syn-blur', 'syn-input']\n  })"},{"kind":"field","name":"hasSlotController","privacy":"private","default":"new HasSlotController(this, 'help-text', 'label')"},{"kind":"field","name":"localize","privacy":"private","default":"new LocalizeController(this)"},{"kind":"field","name":"input","type":{"text":"HTMLInputElement"}},{"kind":"field","name":"hasFocus","type":{"text":"boolean"},"privacy":"private","default":"false"},{"kind":"field","name":"title","type":{"text":"string"},"default":"''","attribute":"title"},{"kind":"field","name":"__numberInput","privacy":"private"},{"kind":"field","name":"__dateInput","privacy":"private"},{"kind":"field","name":"type","type":{"text":"| 'date'\n    | 'datetime-local'\n    | 'email'\n    | 'number'\n    | 'password'\n    | 'search'\n    | 'tel'\n    | 'text'\n    | 'time'\n    | 'url'"},"default":"'text'","description":"The type of input. Works the same as a native `<input>` element, but only a subset of types are supported. Defaults\nto `text`.","attribute":"type","reflects":true},{"kind":"field","name":"name","type":{"text":"string"},"default":"''","description":"The name of the input, submitted as a name/value pair with form data.","attribute":"name"},{"kind":"field","name":"value","type":{"text":"string"},"default":"''","description":"The current value of the input, submitted as a name/value pair with form data.","attribute":"value"},{"kind":"field","name":"defaultValue","type":{"text":"string"},"default":"''","description":"The default value of the form control. Primarily used for resetting the form control."},{"kind":"field","name":"size","type":{"text":"'small' | 'medium' | 'large'"},"default":"'medium'","description":"The input's size.","attribute":"size","reflects":true},{"kind":"field","name":"filled","type":{"text":"boolean"},"default":"false","description":"Draws a filled input.","attribute":"filled","reflects":true},{"kind":"field","name":"pill","type":{"text":"boolean"},"default":"false","description":"Draws a pill-style input with rounded edges.","attribute":"pill","reflects":true},{"kind":"field","name":"label","type":{"text":"string"},"default":"''","description":"The input's label. If you need to display HTML, use the `label` slot instead.","attribute":"label"},{"kind":"field","name":"helpText","type":{"text":"string"},"default":"''","description":"The input's help text. If you need to display HTML, use the `help-text` slot instead.","attribute":"help-text"},{"kind":"field","name":"clearable","type":{"text":"boolean"},"default":"false","description":"Adds a clear button when the input is not empty.","attribute":"clearable"},{"kind":"field","name":"disabled","type":{"text":"boolean"},"default":"false","description":"Disables the input.","attribute":"disabled","reflects":true},{"kind":"field","name":"placeholder","type":{"text":"string"},"default":"''","description":"Placeholder text to show as a hint when the input is empty.","attribute":"placeholder"},{"kind":"field","name":"readonly","type":{"text":"boolean"},"default":"false","description":"Makes the input readonly.","attribute":"readonly","reflects":true},{"kind":"field","name":"passwordToggle","type":{"text":"boolean"},"default":"false","description":"Adds a button to toggle the password's visibility. Only applies to password types.","attribute":"password-toggle"},{"kind":"field","name":"passwordVisible","type":{"text":"boolean"},"default":"false","description":"Determines whether or not the password is currently visible. Only applies to password input types.","attribute":"password-visible"},{"kind":"field","name":"noSpinButtons","type":{"text":"boolean"},"default":"false","description":"Hides the browser's built-in increment/decrement spin buttons for number inputs.","attribute":"no-spin-buttons"},{"kind":"field","name":"form","type":{"text":"string"},"default":"''","description":"By default, form controls are associated with the nearest containing `<form>` element. This attribute allows you\nto place the form control outside of a form and associate it with the form that has this `id`. The form must be in\nthe same document or shadow root for this to work.","attribute":"form","reflects":true},{"kind":"field","name":"required","type":{"text":"boolean"},"default":"false","description":"Makes the input a required field.","attribute":"required","reflects":true},{"kind":"field","name":"pattern","type":{"text":"string"},"description":"A regular expression pattern to validate input against.","attribute":"pattern"},{"kind":"field","name":"minlength","type":{"text":"number"},"description":"The minimum length of input that will be considered valid.","attribute":"minlength"},{"kind":"field","name":"maxlength","type":{"text":"number"},"description":"The maximum length of input that will be considered valid.","attribute":"maxlength"},{"kind":"field","name":"min","type":{"text":"number | string"},"description":"The input's minimum value. Only applies to date and number input types.","attribute":"min"},{"kind":"field","name":"max","type":{"text":"number | string"},"description":"The input's maximum value. Only applies to date and number input types.","attribute":"max"},{"kind":"field","name":"step","type":{"text":"number | 'any'"},"description":"Specifies the granularity that the value must adhere to, or the special value `any` which means no stepping is\nimplied, allowing any numeric value. Only applies to date and number input types.","attribute":"step"},{"kind":"field","name":"autocapitalize","type":{"text":"'off' | 'none' | 'on' | 'sentences' | 'words' | 'characters'"},"description":"Controls whether and how text input is automatically capitalized as it is entered by the user.","attribute":"autocapitalize"},{"kind":"field","name":"autocorrect","type":{"text":"'off' | 'on'"},"description":"Indicates whether the browser's autocorrect feature is on or off.","attribute":"autocorrect"},{"kind":"field","name":"autocomplete","type":{"text":"string"},"description":"Specifies what permission the browser has to provide assistance in filling out form field values. Refer to\n[this page on MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete) for available values.","attribute":"autocomplete"},{"kind":"field","name":"autofocus","type":{"text":"boolean"},"description":"Indicates that the input should receive focus on page load.","attribute":"autofocus"},{"kind":"field","name":"enterkeyhint","type":{"text":"'enter' | 'done' | 'go' | 'next' | 'previous' | 'search' | 'send'"},"description":"Used to customize the label or icon of the Enter key on virtual keyboards.","attribute":"enterkeyhint"},{"kind":"field","name":"spellcheck","type":{"text":"boolean"},"default":"true","description":"Enables spell checking on the input.","attribute":"spellcheck"},{"kind":"field","name":"inputmode","type":{"text":"'none' | 'text' | 'decimal' | 'numeric' | 'tel' | 'search' | 'email' | 'url'"},"description":"Tells the browser what type of data will be entered by the user, allowing it to display the appropriate virtual\nkeyboard on supportive devices.","attribute":"inputmode"},{"kind":"field","name":"valueAsDate","description":"Gets or sets the current value as a `Date` object. Returns `null` if the value can't be converted. This will use the native `<input type=\"{{type}}\">` implementation and may result in an error."},{"kind":"field","name":"valueAsNumber","description":"Gets or sets the current value as a number. Returns `NaN` if the value can't be converted."},{"kind":"field","name":"validity","description":"Gets the validity state object"},{"kind":"field","name":"validationMessage","description":"Gets the validation message"},{"kind":"method","name":"handleBlur","privacy":"private"},{"kind":"method","name":"handleChange","privacy":"private"},{"kind":"method","name":"handleClearClick","privacy":"private","parameters":[{"name":"event","type":{"text":"MouseEvent"}}]},{"kind":"method","name":"handleFocus","privacy":"private"},{"kind":"method","name":"handleInput","privacy":"private"},{"kind":"method","name":"handleInvalid","privacy":"private","parameters":[{"name":"event","type":{"text":"Event"}}]},{"kind":"method","name":"handleKeyDown","privacy":"private","parameters":[{"name":"event","type":{"text":"KeyboardEvent"}}]},{"kind":"method","name":"handlePasswordToggle","privacy":"private"},{"kind":"method","name":"handleDisabledChange"},{"kind":"method","name":"handleStepChange"},{"kind":"method","name":"handleValueChange"},{"kind":"method","name":"focus","parameters":[{"name":"options","optional":true,"type":{"text":"FocusOptions"}}],"description":"Sets focus on the input."},{"kind":"method","name":"blur","description":"Removes focus from the input."},{"kind":"method","name":"select","description":"Selects all the text in the input."},{"kind":"method","name":"setSelectionRange","parameters":[{"name":"selectionStart","type":{"text":"number"}},{"name":"selectionEnd","type":{"text":"number"}},{"name":"selectionDirection","default":"'none'","type":{"text":"'forward' | 'backward' | 'none'"}}],"description":"Sets the start and end positions of the text selection (0-based)."},{"kind":"method","name":"setRangeText","parameters":[{"name":"replacement","type":{"text":"string"}},{"name":"start","optional":true,"type":{"text":"number"}},{"name":"end","optional":true,"type":{"text":"number"}},{"name":"selectMode","optional":true,"type":{"text":"'select' | 'start' | 'end' | 'preserve'"}}],"description":"Replaces a range of text with a new string."},{"kind":"method","name":"showPicker","description":"Displays the browser picker for an input element (only works if the browser supports it for the input type)."},{"kind":"method","name":"stepUp","description":"Increments the value of a numeric input type by the value of the step attribute."},{"kind":"method","name":"stepDown","description":"Decrements the value of a numeric input type by the value of the step attribute."},{"kind":"method","name":"checkValidity","description":"Checks for validity but does not show a validation message. Returns `true` when valid and `false` when invalid."},{"kind":"method","name":"getForm","return":{"type":{"text":"HTMLFormElement | null"}},"description":"Gets the associated form, if one exists."},{"kind":"method","name":"reportValidity","description":"Checks for validity and shows the browser's validation message if the control is invalid."},{"kind":"method","name":"setCustomValidity","parameters":[{"name":"message","type":{"text":"string"}}],"description":"Sets a custom validation message. Pass an empty string to restore validity."}],"events":[{"description":"Emitted when the control loses focus.","name":"syn-blur"},{"description":"Emitted when an alteration to the control's value is committed by the user.","name":"syn-change"},{"description":"Emitted when the clear button is activated.","name":"syn-clear"},{"description":"Emitted when the control gains focus.","name":"syn-focus"},{"description":"Emitted when the control receives input.","name":"syn-input"},{"description":"Emitted when the form control has been checked for validity and its constraints aren't satisfied.","name":"syn-invalid"}],"attributes":[{"name":"title","type":{"text":"string"},"default":"''","fieldName":"title"},{"name":"type","type":{"text":"| 'date'\n    | 'datetime-local'\n    | 'email'\n    | 'number'\n    | 'password'\n    | 'search'\n    | 'tel'\n    | 'text'\n    | 'time'\n    | 'url'"},"default":"'text'","description":"The type of input. Works the same as a native `<input>` element, but only a subset of types are supported. Defaults\nto `text`.","fieldName":"type"},{"name":"name","type":{"text":"string"},"default":"''","description":"The name of the input, submitted as a name/value pair with form data.","fieldName":"name"},{"name":"value","type":{"text":"string"},"default":"''","description":"The current value of the input, submitted as a name/value pair with form data.","fieldName":"value"},{"name":"size","type":{"text":"'small' | 'medium' | 'large'"},"default":"'medium'","description":"The input's size.","fieldName":"size"},{"name":"filled","type":{"text":"boolean"},"default":"false","description":"Draws a filled input.","fieldName":"filled"},{"name":"pill","type":{"text":"boolean"},"default":"false","description":"Draws a pill-style input with rounded edges.","fieldName":"pill"},{"name":"label","type":{"text":"string"},"default":"''","description":"The input's label. If you need to display HTML, use the `label` slot instead.","fieldName":"label"},{"name":"help-text","type":{"text":"string"},"default":"''","description":"The input's help text. If you need to display HTML, use the `help-text` slot instead.","fieldName":"helpText"},{"name":"clearable","type":{"text":"boolean"},"default":"false","description":"Adds a clear button when the input is not empty.","fieldName":"clearable"},{"name":"disabled","type":{"text":"boolean"},"default":"false","description":"Disables the input.","fieldName":"disabled"},{"name":"placeholder","type":{"text":"string"},"default":"''","description":"Placeholder text to show as a hint when the input is empty.","fieldName":"placeholder"},{"name":"readonly","type":{"text":"boolean"},"default":"false","description":"Makes the input readonly.","fieldName":"readonly"},{"name":"password-toggle","type":{"text":"boolean"},"default":"false","description":"Adds a button to toggle the password's visibility. Only applies to password types.","fieldName":"passwordToggle"},{"name":"password-visible","type":{"text":"boolean"},"default":"false","description":"Determines whether or not the password is currently visible. Only applies to password input types.","fieldName":"passwordVisible"},{"name":"no-spin-buttons","type":{"text":"boolean"},"default":"false","description":"Hides the browser's built-in increment/decrement spin buttons for number inputs.","fieldName":"noSpinButtons"},{"name":"form","type":{"text":"string"},"default":"''","description":"By default, form controls are associated with the nearest containing `<form>` element. This attribute allows you\nto place the form control outside of a form and associate it with the form that has this `id`. The form must be in\nthe same document or shadow root for this to work.","fieldName":"form"},{"name":"required","type":{"text":"boolean"},"default":"false","description":"Makes the input a required field.","fieldName":"required"},{"name":"pattern","type":{"text":"string"},"description":"A regular expression pattern to validate input against.","fieldName":"pattern"},{"name":"minlength","type":{"text":"number"},"description":"The minimum length of input that will be considered valid.","fieldName":"minlength"},{"name":"maxlength","type":{"text":"number"},"description":"The maximum length of input that will be considered valid.","fieldName":"maxlength"},{"name":"min","type":{"text":"number | string"},"description":"The input's minimum value. Only applies to date and number input types.","fieldName":"min"},{"name":"max","type":{"text":"number | string"},"description":"The input's maximum value. Only applies to date and number input types.","fieldName":"max"},{"name":"step","type":{"text":"number | 'any'"},"description":"Specifies the granularity that the value must adhere to, or the special value `any` which means no stepping is\nimplied, allowing any numeric value. Only applies to date and number input types.","fieldName":"step"},{"name":"autocapitalize","type":{"text":"'off' | 'none' | 'on' | 'sentences' | 'words' | 'characters'"},"description":"Controls whether and how text input is automatically capitalized as it is entered by the user.","fieldName":"autocapitalize"},{"name":"autocorrect","type":{"text":"'off' | 'on'"},"description":"Indicates whether the browser's autocorrect feature is on or off.","fieldName":"autocorrect"},{"name":"autocomplete","type":{"text":"string"},"description":"Specifies what permission the browser has to provide assistance in filling out form field values. Refer to\n[this page on MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete) for available values.","fieldName":"autocomplete"},{"name":"autofocus","type":{"text":"boolean"},"description":"Indicates that the input should receive focus on page load.","fieldName":"autofocus"},{"name":"enterkeyhint","type":{"text":"'enter' | 'done' | 'go' | 'next' | 'previous' | 'search' | 'send'"},"description":"Used to customize the label or icon of the Enter key on virtual keyboards.","fieldName":"enterkeyhint"},{"name":"spellcheck","type":{"text":"boolean"},"default":"true","description":"Enables spell checking on the input.","fieldName":"spellcheck"},{"name":"inputmode","type":{"text":"'none' | 'text' | 'decimal' | 'numeric' | 'tel' | 'search' | 'email' | 'url'"},"description":"Tells the browser what type of data will be entered by the user, allowing it to display the appropriate virtual\nkeyboard on supportive devices.","fieldName":"inputmode"}],"superclass":{"name":"SynergyElement","module":"/components/src/internal/synergy-element.js"},"summary":"Inputs collect data from the user.","tagNameWithoutPrefix":"input","tagName":"syn-input","customElement":true,"jsDoc":"/**\n * @summary Inputs collect data from the user.\n * @documentation https://synergy.style/components/input\n * @status stable\n * @since 2.0\n *\n * @dependency syn-icon\n *\n * @slot label - The input's label. Alternatively, you can use the `label` attribute.\n * @slot prefix - Used to prepend a presentational icon or similar element to the input.\n * @slot suffix - Used to append a presentational icon or similar element to the input.\n * @slot clear-icon - An icon to use in lieu of the default clear icon.\n * @slot show-password-icon - An icon to use in lieu of the default show password icon.\n * @slot hide-password-icon - An icon to use in lieu of the default hide password icon.\n * @slot help-text - Text that describes how to use the input. Alternatively, you can use the `help-text` attribute.\n *\n * @event syn-blur - Emitted when the control loses focus.\n * @event syn-change - Emitted when an alteration to the control's value is committed by the user.\n * @event syn-clear - Emitted when the clear button is activated.\n * @event syn-focus - Emitted when the control gains focus.\n * @event syn-input - Emitted when the control receives input.\n * @event syn-invalid - Emitted when the form control has been checked for validity and its constraints aren't satisfied.\n *\n * @csspart form-control - The form control that wraps the label, input, and help text.\n * @csspart form-control-label - The label's wrapper.\n * @csspart form-control-input - The input's wrapper.\n * @csspart form-control-help-text - The help text's wrapper.\n * @csspart base - The component's base wrapper.\n * @csspart input - The internal `<input>` control.\n * @csspart prefix - The container that wraps the prefix.\n * @csspart clear-button - The clear button.\n * @csspart password-toggle-button - The password toggle button.\n * @csspart suffix - The container that wraps the suffix.\n */","documentation":"https://synergy.style/components/input","status":"stable","since":"2.0","dependencies":["syn-icon"]}],"exports":[{"kind":"js","name":"default","declaration":{"name":"SynInput","module":"../components/src/components/input/input.js"}}]},{"kind":"javascript-module","path":"../components/src/components/spinner/spinner.js","declarations":[{"kind":"class","description":"","name":"SynSpinner","cssProperties":[{"description":"The width of the track.","name":"--track-width"},{"description":"The color of the track.","name":"--track-color"},{"description":"The color of the spinner's indicator.","name":"--indicator-color"},{"description":"The time it takes for the spinner to complete one animation cycle.","name":"--speed"}],"cssParts":[{"description":"The component's base wrapper.","name":"base"}],"members":[{"kind":"field","name":"localize","privacy":"private","default":"new LocalizeController(this)"}],"superclass":{"name":"SynergyElement","module":"/components/src/internal/synergy-element.js"},"summary":"Spinners are used to show the progress of an indeterminate operation.","tagNameWithoutPrefix":"spinner","tagName":"syn-spinner","customElement":true,"jsDoc":"/**\n * @summary Spinners are used to show the progress of an indeterminate operation.\n * @documentation https://synergy.style/components/spinner\n * @status stable\n * @since 2.0\n *\n * @csspart base - The component's base wrapper.\n *\n * @cssproperty --track-width - The width of the track.\n * @cssproperty --track-color - The color of the track.\n * @cssproperty --indicator-color - The color of the spinner's indicator.\n * @cssproperty --speed - The time it takes for the spinner to complete one animation cycle.\n */","documentation":"https://synergy.style/components/spinner","status":"stable","since":"2.0"}],"exports":[{"kind":"js","name":"default","declaration":{"name":"SynSpinner","module":"../components/src/components/spinner/spinner.js"}}]}],"package":{"author":{"name":"SICK Global UX Foundation","url":"https://www.sick.com"},"description":"","homepage":"https://github.com/SickDesignSystem/synergy/tree/main/packages/components","license":"ISC","name":"@synergy-design-system/components","version":"1.0.0-main.1"}}