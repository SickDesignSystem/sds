// ---------------------------------------------------------------------
// ðŸ”’ AUTOGENERATED BY VENDORISM
// Removing this comment will prevent it from being managed by it.
// ---------------------------------------------------------------------

/* eslint-disable */

/* eslint-disable import/no-relative-packages */

import '../../../components/src/components/menu-item/menu-item';
import type { Meta, StoryObj } from '@storybook/web-components';
import { html } from 'lit';
import { storybookDefaults, storybookHelpers, storybookTemplate, generateStoryDescription } from '../../src/helpers/component.js';
const { args, argTypes } = storybookDefaults('syn-menu-item');
const { overrideArgs } = storybookHelpers('syn-menu-item');
const { generateTemplate } = storybookTemplate('syn-menu-item');

const meta: Meta = {
  component: 'menu-item',
  args,
  argTypes,
  title: 'Components/syn-menu-item',
  parameters: {
    docs: {
      description: {
        component: generateStoryDescription('menu-item', 'default'),
      },
    }
  }
};
export default meta;

type Story = StoryObj;

export const Default = {
  render: (args: any) => {
    return generateTemplate({ args });
  },
  parameters: {
    docs: {
      description: {
        story: generateStoryDescription('menu-item', 'default'),
      }
    }
  }
} as Story;


/**
 * Add content to the start and end of menu items using the prefix and suffix slots.
 */
export const PrefixSuffix: Story = {
  render: () => html`<syn-menu style="max-width: 200px;">
  <syn-menu-item>
    <syn-icon slot="prefix" name="house"></syn-icon>
    Home
  </syn-menu-item>

  <syn-menu-item>
    <syn-icon slot="prefix" name="envelope"></syn-icon>
    Messages
    <syn-badge slot="suffix" variant="primary" pill>12</syn-badge>
  </syn-menu-item>

  <syn-divider></syn-divider>

  <syn-menu-item>
    <syn-icon slot="prefix" name="gear"></syn-icon>
    Settings
  </syn-menu-item>
</syn-menu>`,
};

/**
 * Add the disabled attribute to disable the menu item so it cannot be selected.
 */
export const Disabled: Story = {
  render: () => html`<syn-menu style="max-width: 200px;">
  <syn-menu-item>Option 1</syn-menu-item>
  <syn-menu-item disabled>Option 2</syn-menu-item>
  <syn-menu-item>Option 3</syn-menu-item>
</syn-menu>`,
};

/**
 * Use the loading attribute to indicate that a menu item is busy. Like a disabled menu item, clicks will be suppressed until the loading state is removed.
 */
export const Loading: Story = {
  render: () => html`<syn-menu style="max-width: 200px;">
  <syn-menu-item>Option 1</syn-menu-item>
  <syn-menu-item loading>Option 2</syn-menu-item>
  <syn-menu-item>Option 3</syn-menu-item>
</syn-menu>`,
};

/**
 * Set the type attribute to checkbox to create a menu item that will toggle on and off when selected. You can use the checked attribute to set the initial state.Checkbox menu items are visually indistinguishable from regular menu items. Their ability to be toggled is primarily inferred from context, much like you'd find in the menu of a native app.
 */
export const CheckboxMenuItems: Story = {
  render: () => html`<syn-menu style="max-width: 200px;">
  <syn-menu-item type="checkbox">Autosave</syn-menu-item>
  <syn-menu-item type="checkbox" checked>Check Spelling</syn-menu-item>
  <syn-menu-item type="checkbox">Word Wrap</syn-menu-item>
</syn-menu>`,
};

/**
 * The value attribute can be used to assign a hidden value, such as a unique identifier, to a menu item. When an item is selected, the syn-select event will be emitted and a reference to the item will be available at event.detail.item. You can use this reference to access the selected item's value, its checked state, and more.
 */
export const ValueSelection: Story = {
  render: () => html`<syn-menu class="menu-value" style="max-width: 200px;">
  <syn-menu-item value="opt-1">Option 1</syn-menu-item>
  <syn-menu-item value="opt-2">Option 2</syn-menu-item>
  <syn-menu-item value="opt-3">Option 3</syn-menu-item>
  <syn-divider></syn-divider>
  <syn-menu-item type="checkbox" value="opt-4">Checkbox 4</syn-menu-item>
  <syn-menu-item type="checkbox" value="opt-5">Checkbox 5</syn-menu-item>
  <syn-menu-item type="checkbox" value="opt-6">Checkbox 6</syn-menu-item>
</syn-menu>

<script type="module">
  const menu = document.querySelector('.menu-value');

  menu.addEventListener('syn-select', event => {
    const item = event.detail.item;

    // Log value
    if (item.type === 'checkbox') {
      console.log(\`Selected value: \${item.value} (\${item.checked ? 'checked' : 'unchecked'})\`);
    } else {
      console.log(\`Selected value: \${item.value}\`);
    }
  });
</script>`,
};
