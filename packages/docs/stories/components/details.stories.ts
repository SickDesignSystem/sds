// ---------------------------------------------------------------------
// ðŸ”’ AUTOGENERATED BY VENDORISM
// Removing this comment will prevent it from being managed by it.
// ---------------------------------------------------------------------

/* eslint-disable */

/* eslint-disable import/no-relative-packages */

import '../../../components/src/components/details/details';
import type { Meta, StoryObj } from '@storybook/web-components';
import { html } from 'lit';
import { storybookDefaults, storybookHelpers, storybookTemplate, generateStoryDescription } from '../../src/helpers/component.js';
const { args, argTypes } = storybookDefaults('syn-details');
const { overrideArgs } = storybookHelpers('syn-details');
const { generateTemplate } = storybookTemplate('syn-details');

const meta: Meta = {
  component: 'details',
  args,
  argTypes,
  title: 'Components/syn-details',
  parameters: {
    docs: {
      description: {
        component: generateStoryDescription('details', 'default'),
      },
    }
  }
};
export default meta;

type Story = StoryObj;

export const Default = {
  render: (args: any) => {
    return generateTemplate({ args });
  },
  parameters: {
    docs: {
      description: {
        story: generateStoryDescription('details', 'default'),
      }
    }
  }
} as Story;


/**
 * Use the disable attribute to prevent the details from expanding.
 */
export const Disabled: Story = {
  render: () => html`<syn-details summary="Disabled" disabled>
  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna
  aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
</syn-details>`,
};

/**
 * Use the expand-icon and collapse-icon slots to change the expand and collapse icons, respectively. To disable the animation, override the rotate property on the summary-icon part as shown below.
 */
export const CustomizingTheSummaryIcon: Story = {
  render: () => html`<syn-details summary="Toggle Me" class="custom-icons">
  <syn-icon name="plus-square" slot="expand-icon"></syn-icon>
  <syn-icon name="dash-square" slot="collapse-icon"></syn-icon>

  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna
  aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
</syn-details>

<style>
  syn-details.custom-icons::part(summary-icon) {
    /* Disable the expand/collapse animation */
    rotate: none;
  }
</style>`,
};

/**
 * Details are designed to function independently, but you can simulate a group or "accordion" where only one is shown at a time by listening for the syn-show event.
 */
export const GroupingDetails: Story = {
  render: () => html`<div class="details-group-example">
  <syn-details summary="First" open>
    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna
    aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
  </syn-details>

  <syn-details summary="Second">
    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna
    aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
  </syn-details>

  <syn-details summary="Third">
    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna
    aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
  </syn-details>
</div>

<script type="module">
  const container = document.querySelector('.details-group-example');

  // Close all other details when one is shown
  container.addEventListener('syn-show', event => {
    if (event.target.localName === 'syn-details') {
      [...container.querySelectorAll('syn-details')].map(details => (details.open = event.target === details));
    }
  });
</script>

<style>
  .details-group-example syn-details:not(:last-of-type) {
    margin-bottom: var(--syn-spacing-2x-small);
  }
</style>`,
};
