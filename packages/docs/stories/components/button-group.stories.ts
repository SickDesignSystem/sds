// ---------------------------------------------------------------------
// ðŸ”’ AUTOGENERATED BY VENDORISM
// Removing this comment will prevent it from being managed by it.
// ---------------------------------------------------------------------

/* eslint-disable */

/* eslint-disable import/no-relative-packages */

import '../../../components/src/components/button-group/button-group';
import type { Meta, StoryObj } from '@storybook/web-components';
import { html } from 'lit';
import docsTokens from '../../../tokens/src/figma-tokens/_docs.json';
import { storybookDefaults, storybookHelpers, storybookTemplate } from '../../src/helpers/component.js';
const { args, argTypes } = storybookDefaults('syn-button-group');
const { overrideArgs } = storybookHelpers('syn-button-group');
const { generateTemplate } = storybookTemplate('syn-button-group');

const meta: Meta = {
  component: 'button-group',
  args,
  argTypes,
  title: 'Components/syn-button-group',
  parameters: {
    docs: {
      description: {
        component: docsTokens?.components?.['button-group']?.default?.description?.value ?? 'No Description',
      },
    }
  }
};
export default meta;

type Story = StoryObj;

export const Default = {
  render: (args: any) => {
    return generateTemplate({ args });
  },
  parameters: {
    docs: {
      description: {
        story: docsTokens?.components?.['button-group']?.default?.description?.value ?? 'No Description',
      }
    }
  }
} as Story;


/**
 * All button sizes are supported, but avoid mixing sizes within the same button group.
 */
export const ButtonSizes: Story = {
  render: () => html`<syn-button-group label="Alignment">
  <syn-button size="small">Left</syn-button>
  <syn-button size="small">Center</syn-button>
  <syn-button size="small">Right</syn-button>
</syn-button-group>

<br /><br />

<syn-button-group label="Alignment">
  <syn-button size="medium">Left</syn-button>
  <syn-button size="medium">Center</syn-button>
  <syn-button size="medium">Right</syn-button>
</syn-button-group>

<br /><br />

<syn-button-group label="Alignment">
  <syn-button size="large">Left</syn-button>
  <syn-button size="large">Center</syn-button>
  <syn-button size="large">Right</syn-button>
</syn-button-group>`,
};

/**
 * Theme buttons are supported through the button's variant attribute.
 */
export const ThemeButtons: Story = {
  render: () => html`<syn-button-group label="Alignment">
  <syn-button variant="primary">Left</syn-button>
  <syn-button variant="primary">Center</syn-button>
  <syn-button variant="primary">Right</syn-button>
</syn-button-group>

<br /><br />

<syn-button-group label="Alignment">
  <syn-button variant="success">Left</syn-button>
  <syn-button variant="success">Center</syn-button>
  <syn-button variant="success">Right</syn-button>
</syn-button-group>

<br /><br />

<syn-button-group label="Alignment">
  <syn-button variant="neutral">Left</syn-button>
  <syn-button variant="neutral">Center</syn-button>
  <syn-button variant="neutral">Right</syn-button>
</syn-button-group>

<br /><br />

<syn-button-group label="Alignment">
  <syn-button variant="warning">Left</syn-button>
  <syn-button variant="warning">Center</syn-button>
  <syn-button variant="warning">Right</syn-button>
</syn-button-group>

<br /><br />

<syn-button-group label="Alignment">
  <syn-button variant="danger">Left</syn-button>
  <syn-button variant="danger">Center</syn-button>
  <syn-button variant="danger">Right</syn-button>
</syn-button-group>`,
};

/**
 * Pill buttons are supported through the button's pill attribute.
 */
export const PillButtons: Story = {
  render: () => html`<syn-button-group label="Alignment">
  <syn-button size="small" pill>Left</syn-button>
  <syn-button size="small" pill>Center</syn-button>
  <syn-button size="small" pill>Right</syn-button>
</syn-button-group>

<br /><br />

<syn-button-group label="Alignment">
  <syn-button size="medium" pill>Left</syn-button>
  <syn-button size="medium" pill>Center</syn-button>
  <syn-button size="medium" pill>Right</syn-button>
</syn-button-group>

<br /><br />

<syn-button-group label="Alignment">
  <syn-button size="large" pill>Left</syn-button>
  <syn-button size="large" pill>Center</syn-button>
  <syn-button size="large" pill>Right</syn-button>
</syn-button-group>`,
};

/**
 * Dropdowns can be placed inside button groups as long as the trigger is an <syn-button> element.
 */
export const DropdownsInButtonGroups: Story = {
  render: () => html`<syn-button-group label="Example Button Group">
  <syn-button>Button</syn-button>
  <syn-button>Button</syn-button>
  <syn-dropdown>
    <syn-button slot="trigger" caret>Dropdown</syn-button>
    <syn-menu>
      <syn-menu-item>Item 1</syn-menu-item>
      <syn-menu-item>Item 2</syn-menu-item>
      <syn-menu-item>Item 3</syn-menu-item>
    </syn-menu>
  </syn-dropdown>
</syn-button-group>`,
};

/**
 * Create a split button using a button and a dropdown. Use a  label to ensure the dropdown is accessible to users with assistive devices.
 */
export const SplitButtons: Story = {
  render: () => html`<syn-button-group label="Example Button Group">
  <syn-button variant="primary">Save</syn-button>
  <syn-dropdown placement="bottom-end">
    <syn-button slot="trigger" variant="primary" caret>
      <syn-visually-hidden>More options</syn-visually-hidden>
    </syn-button>
    <syn-menu>
      <syn-menu-item>Save</syn-menu-item>
      <syn-menu-item>Save as&hellip;</syn-menu-item>
      <syn-menu-item>Save all</syn-menu-item>
    </syn-menu>
  </syn-dropdown>
</syn-button-group>`,
};

/**
 * Buttons can be wrapped in tooltips to provide more detail when the user interacts with them.
 */
export const TooltipsInButtonGroups: Story = {
  render: () => html`<syn-button-group label="Alignment">
  <syn-tooltip content="I'm on the left">
    <syn-button>Left</syn-button>
  </syn-tooltip>

  <syn-tooltip content="I'm in the middle">
    <syn-button>Center</syn-button>
  </syn-tooltip>

  <syn-tooltip content="I'm on the right">
    <syn-button>Right</syn-button>
  </syn-tooltip>
</syn-button-group>`,
};

/**
 * Create interactive toolbars with button groups.
 */
export const ToolbarExample: Story = {
  render: () => html`<div class="button-group-toolbar">
  <syn-button-group label="History">
    <syn-tooltip content="Undo">
      <syn-button><syn-icon name="arrow-counterclockwise" label="Undo"></syn-icon></syn-button>
    </syn-tooltip>
    <syn-tooltip content="Redo">
      <syn-button><syn-icon name="arrow-clockwise" label="Redo"></syn-icon></syn-button>
    </syn-tooltip>
  </syn-button-group>

  <syn-button-group label="Formatting">
    <syn-tooltip content="Bold">
      <syn-button><syn-icon name="type-bold" label="Bold"></syn-icon></syn-button>
    </syn-tooltip>
    <syn-tooltip content="Italic">
      <syn-button><syn-icon name="type-italic" label="Italic"></syn-icon></syn-button>
    </syn-tooltip>
    <syn-tooltip content="Underline">
      <syn-button><syn-icon name="type-underline" label="Underline"></syn-icon></syn-button>
    </syn-tooltip>
  </syn-button-group>

  <syn-button-group label="Alignment">
    <syn-tooltip content="Align Left">
      <syn-button><syn-icon name="justify-left" label="Align Left"></syn-icon></syn-button>
    </syn-tooltip>
    <syn-tooltip content="Align Center">
      <syn-button><syn-icon name="justify" label="Align Center"></syn-icon></syn-button>
    </syn-tooltip>
    <syn-tooltip content="Align Right">
      <syn-button><syn-icon name="justify-right" label="Align Right"></syn-icon></syn-button>
    </syn-tooltip>
  </syn-button-group>
</div>

<style>
  .button-group-toolbar syn-button-group:not(:last-of-type) {
    margin-right: var(--syn-spacing-x-small);
  }
</style>`,
};
