// ---------------------------------------------------------------------
// ðŸ”’ AUTOGENERATED BY VENDORISM
// Removing this comment will prevent it from being managed by it.
// ---------------------------------------------------------------------

/* eslint-disable */

/* eslint-disable import/no-relative-packages */

import '../../../components/src/components/progress-bar/progress-bar';
import type { Meta, StoryObj } from '@storybook/web-components';
import { html } from 'lit';
import { storybookDefaults, storybookHelpers, storybookTemplate, generateStoryDescription } from '../../src/helpers/component.js';
const { args, argTypes } = storybookDefaults('syn-progress-bar');
const { overrideArgs } = storybookHelpers('syn-progress-bar');
const { generateTemplate } = storybookTemplate('syn-progress-bar');

const meta: Meta = {
  component: 'progress-bar',
  args,
  argTypes,
  title: 'Components/syn-progress-bar',
  parameters: {
    docs: {
      description: {
        component: generateStoryDescription('progress-bar', 'default'),
      },
    }
  }
};
export default meta;

type Story = StoryObj;

export const Default = {
  render: (args: any) => {
    return generateTemplate({ args });
  },
  parameters: {
    docs: {
      description: {
        story: generateStoryDescription('progress-bar', 'default'),
      }
    }
  }
} as Story;


/**
 * Use the label attribute to label the progress bar and tell assistive devices how to announce it.
 */
export const Labels: Story = {
  render: () => html`<syn-progress-bar value="50" label="Upload progress"></syn-progress-bar>`,
};

/**
 * Use the --height custom property to set the progress bar's height.
 */
export const CustomHeight: Story = {
  render: () => html`<syn-progress-bar value="50" style="--height: 6px;"></syn-progress-bar>`,
};

/**
 * Use the default slot to show a value.
 */
export const ShowingValues: Story = {
  render: () => html`<syn-progress-bar value="50" class="progress-bar-values">50%</syn-progress-bar>

<br />

<syn-button circle><syn-icon name="dash" label="Decrease"></syn-icon></syn-button>
<syn-button circle><syn-icon name="plus" label="Increase"></syn-icon></syn-button>

<script type="module">
  const progressBar = document.querySelector('.progress-bar-values');
  const subtractButton = progressBar.nextElementSibling.nextElementSibling;
  const addButton = subtractButton.nextElementSibling;

  addButton.addEventListener('click', () => {
    const value = Math.min(100, progressBar.value + 10);
    progressBar.value = value;
    progressBar.textContent = \`\${value}%\`;
  });

  subtractButton.addEventListener('click', () => {
    const value = Math.max(0, progressBar.value - 10);
    progressBar.value = value;
    progressBar.textContent = \`\${value}%\`;
  });
</script>`,
};

/**
 * The indeterminate attribute can be used to inform the user that the operation is pending, but its status cannot currently be determined. In this state, value is ignored and the label, if present, will not be shown.
 */
export const Indeterminate: Story = {
  render: () => html`<syn-progress-bar indeterminate></syn-progress-bar>`,
};
