// ---------------------------------------------------------------------
// ðŸ”’ AUTOGENERATED BY VENDORISM
// Removing this comment will prevent it from being managed by it.
// ---------------------------------------------------------------------

/* eslint-disable */

/* eslint-disable import/no-relative-packages */

import '../../../components/src/components/tab-group/tab-group';
import type { Meta, StoryObj } from '@storybook/web-components';
import { html } from 'lit';
import { storybookDefaults, storybookHelpers, storybookTemplate, generateStoryDescription } from '../../src/helpers/component.js';
const { args, argTypes } = storybookDefaults('syn-tab-group');
const { overrideArgs } = storybookHelpers('syn-tab-group');
const { generateTemplate } = storybookTemplate('syn-tab-group');

const meta: Meta = {
  component: 'tab-group',
  args,
  argTypes,
  title: 'Components/syn-tab-group',
  parameters: {
    docs: {
      description: {
        component: generateStoryDescription('tab-group', 'default'),
      },
    }
  }
};
export default meta;

type Story = StoryObj;

export const Default = {
  render: (args: any) => {
    return generateTemplate({ args });
  },
  parameters: {
    docs: {
      description: {
        story: generateStoryDescription('tab-group', 'default'),
      }
    }
  }
} as Story;


/**
 * Tabs can be shown on the bottom by setting placement to bottom.
 */
export const TabsOnBottom: Story = {
  render: () => html`<syn-tab-group placement="bottom">
  <syn-tab slot="nav" panel="general">General</syn-tab>
  <syn-tab slot="nav" panel="custom">Custom</syn-tab>
  <syn-tab slot="nav" panel="advanced">Advanced</syn-tab>
  <syn-tab slot="nav" panel="disabled" disabled>Disabled</syn-tab>

  <syn-tab-panel name="general">This is the general tab panel.</syn-tab-panel>
  <syn-tab-panel name="custom">This is the custom tab panel.</syn-tab-panel>
  <syn-tab-panel name="advanced">This is the advanced tab panel.</syn-tab-panel>
  <syn-tab-panel name="disabled">This is a disabled tab panel.</syn-tab-panel>
</syn-tab-group>`,
};

/**
 * Tabs can be shown on the starting side by setting placement to start.
 */
export const TabsOnStart: Story = {
  render: () => html`<syn-tab-group placement="start">
  <syn-tab slot="nav" panel="general">General</syn-tab>
  <syn-tab slot="nav" panel="custom">Custom</syn-tab>
  <syn-tab slot="nav" panel="advanced">Advanced</syn-tab>
  <syn-tab slot="nav" panel="disabled" disabled>Disabled</syn-tab>

  <syn-tab-panel name="general">This is the general tab panel.</syn-tab-panel>
  <syn-tab-panel name="custom">This is the custom tab panel.</syn-tab-panel>
  <syn-tab-panel name="advanced">This is the advanced tab panel.</syn-tab-panel>
  <syn-tab-panel name="disabled">This is a disabled tab panel.</syn-tab-panel>
</syn-tab-group>`,
};

/**
 * Tabs can be shown on the ending side by setting placement to end.
 */
export const TabsOnEnd: Story = {
  render: () => html`<syn-tab-group placement="end">
  <syn-tab slot="nav" panel="general">General</syn-tab>
  <syn-tab slot="nav" panel="custom">Custom</syn-tab>
  <syn-tab slot="nav" panel="advanced">Advanced</syn-tab>
  <syn-tab slot="nav" panel="disabled" disabled>Disabled</syn-tab>

  <syn-tab-panel name="general">This is the general tab panel.</syn-tab-panel>
  <syn-tab-panel name="custom">This is the custom tab panel.</syn-tab-panel>
  <syn-tab-panel name="advanced">This is the advanced tab panel.</syn-tab-panel>
  <syn-tab-panel name="disabled">This is a disabled tab panel.</syn-tab-panel>
</syn-tab-group>`,
};

/**
 * Add the closable attribute to a tab to show a close button. This example shows how you can dynamically remove tabs from the DOM when the close button is activated.
 */
export const ClosableTabs: Story = {
  render: () => html`<syn-tab-group class="tabs-closable">
  <syn-tab slot="nav" panel="general">General</syn-tab>
  <syn-tab slot="nav" panel="closable-1" closable>Closable 1</syn-tab>
  <syn-tab slot="nav" panel="closable-2" closable>Closable 2</syn-tab>
  <syn-tab slot="nav" panel="closable-3" closable>Closable 3</syn-tab>

  <syn-tab-panel name="general">This is the general tab panel.</syn-tab-panel>
  <syn-tab-panel name="closable-1">This is the first closable tab panel.</syn-tab-panel>
  <syn-tab-panel name="closable-2">This is the second closable tab panel.</syn-tab-panel>
  <syn-tab-panel name="closable-3">This is the third closable tab panel.</syn-tab-panel>
</syn-tab-group>

<script type="module">
  const tabGroup = document.querySelector('.tabs-closable');

  tabGroup.addEventListener('syn-close', async event => {
    const tab = event.target;
    const panel = tabGroup.querySelector(\`syn-tab-panel[name="\${tab.panel}"]\`);

    // Show the previous tab if the tab is currently active
    if (tab.active) {
      tabGroup.show(tab.previousElementSibling.panel);
    }

    // Remove the tab + panel
    tab.remove();
    panel.remove();
  });
</script>`,
};

/**
 * When there are more tabs than horizontal space allows, the nav will be scrollable.
 */
export const ScrollingTabs: Story = {
  render: () => html`<syn-tab-group>
  <syn-tab slot="nav" panel="tab-1">Tab 1</syn-tab>
  <syn-tab slot="nav" panel="tab-2">Tab 2</syn-tab>
  <syn-tab slot="nav" panel="tab-3">Tab 3</syn-tab>
  <syn-tab slot="nav" panel="tab-4">Tab 4</syn-tab>
  <syn-tab slot="nav" panel="tab-5">Tab 5</syn-tab>
  <syn-tab slot="nav" panel="tab-6">Tab 6</syn-tab>
  <syn-tab slot="nav" panel="tab-7">Tab 7</syn-tab>
  <syn-tab slot="nav" panel="tab-8">Tab 8</syn-tab>
  <syn-tab slot="nav" panel="tab-9">Tab 9</syn-tab>
  <syn-tab slot="nav" panel="tab-10">Tab 10</syn-tab>
  <syn-tab slot="nav" panel="tab-11">Tab 11</syn-tab>
  <syn-tab slot="nav" panel="tab-12">Tab 12</syn-tab>
  <syn-tab slot="nav" panel="tab-13">Tab 13</syn-tab>
  <syn-tab slot="nav" panel="tab-14">Tab 14</syn-tab>
  <syn-tab slot="nav" panel="tab-15">Tab 15</syn-tab>
  <syn-tab slot="nav" panel="tab-16">Tab 16</syn-tab>
  <syn-tab slot="nav" panel="tab-17">Tab 17</syn-tab>
  <syn-tab slot="nav" panel="tab-18">Tab 18</syn-tab>
  <syn-tab slot="nav" panel="tab-19">Tab 19</syn-tab>
  <syn-tab slot="nav" panel="tab-20">Tab 20</syn-tab>

  <syn-tab-panel name="tab-1">Tab panel 1</syn-tab-panel>
  <syn-tab-panel name="tab-2">Tab panel 2</syn-tab-panel>
  <syn-tab-panel name="tab-3">Tab panel 3</syn-tab-panel>
  <syn-tab-panel name="tab-4">Tab panel 4</syn-tab-panel>
  <syn-tab-panel name="tab-5">Tab panel 5</syn-tab-panel>
  <syn-tab-panel name="tab-6">Tab panel 6</syn-tab-panel>
  <syn-tab-panel name="tab-7">Tab panel 7</syn-tab-panel>
  <syn-tab-panel name="tab-8">Tab panel 8</syn-tab-panel>
  <syn-tab-panel name="tab-9">Tab panel 9</syn-tab-panel>
  <syn-tab-panel name="tab-10">Tab panel 10</syn-tab-panel>
  <syn-tab-panel name="tab-11">Tab panel 11</syn-tab-panel>
  <syn-tab-panel name="tab-12">Tab panel 12</syn-tab-panel>
  <syn-tab-panel name="tab-13">Tab panel 13</syn-tab-panel>
  <syn-tab-panel name="tab-14">Tab panel 14</syn-tab-panel>
  <syn-tab-panel name="tab-15">Tab panel 15</syn-tab-panel>
  <syn-tab-panel name="tab-16">Tab panel 16</syn-tab-panel>
  <syn-tab-panel name="tab-17">Tab panel 17</syn-tab-panel>
  <syn-tab-panel name="tab-18">Tab panel 18</syn-tab-panel>
  <syn-tab-panel name="tab-19">Tab panel 19</syn-tab-panel>
  <syn-tab-panel name="tab-20">Tab panel 20</syn-tab-panel>
</syn-tab-group>`,
};

/**
 * When focused, keyboard users can press [[Left]] or [[Right]] to select the desired tab. By default, the corresponding tab panel will be shown immediately (automatic activation). You can change this behavior by setting activation="manual" which will require the user to press [[Space]] or [[Enter]] before showing the tab panel (manual activation).
 */
export const ManualActivation: Story = {
  render: () => html`<syn-tab-group activation="manual">
  <syn-tab slot="nav" panel="general">General</syn-tab>
  <syn-tab slot="nav" panel="custom">Custom</syn-tab>
  <syn-tab slot="nav" panel="advanced">Advanced</syn-tab>
  <syn-tab slot="nav" panel="disabled" disabled>Disabled</syn-tab>

  <syn-tab-panel name="general">This is the general tab panel.</syn-tab-panel>
  <syn-tab-panel name="custom">This is the custom tab panel.</syn-tab-panel>
  <syn-tab-panel name="advanced">This is the advanced tab panel.</syn-tab-panel>
  <syn-tab-panel name="disabled">This is a disabled tab panel.</syn-tab-panel>
</syn-tab-group>`,
};
