// ---------------------------------------------------------------------
// ðŸ”’ AUTOGENERATED @synergy-design-system/angular wrappers for @synergy-design-system/components
// Please do not edit this file directly!
// It will get recreated when running pnpm build.
// ---------------------------------------------------------------------
import {
  Component,
  ElementRef,
  NgZone,
  Input,
  Output,
  EventEmitter,
  inject,
  AfterContentInit,
} from '@angular/core';
import type { SynDivider } from '@synergy-design-system/components';

import '@synergy-design-system/components/components/divider/divider.js';

/**
 * @summary Dividers are used to visually separate or group elements.
 * @documentation https://synergy.style/components/divider
 * @status stable
 * @since 2.0
 *
 * @cssproperty --color - The color of the divider.
 * @cssproperty --width - The width of the divider.
 * @cssproperty --spacing - The spacing of the divider.
 */
@Component({
  selector: 'syn-divider',
  standalone: true,
  template: '<ng-content></ng-content>',
})
export class SynDividerComponent {
  private _elementRef = inject(ElementRef);
  private _ngZone: NgZone = inject(NgZone);

  public nativeElement: SynDivider;

  constructor() {
    this.nativeElement = this._elementRef.nativeElement;
  }

  /**
   * Draws the divider in a vertical orientation.
   */
  @Input()
  set vertical(v: '' | SynDivider['vertical']) {
    this._ngZone.runOutsideAngular(
      () => (this.nativeElement.vertical = v === '' || v),
    );
  }
  get vertical(): SynDivider['vertical'] {
    return this.nativeElement.vertical;
  }
}
