// ---------------------------------------------------------------------
// ðŸ”’ AUTOGENERATED @synergy-design-system/angular wrappers for @synergy-design-system/components
// Please do not edit this file directly!
// It will get recreated when running pnpm build.
// ---------------------------------------------------------------------
import {
  Directive,
  NgModule,
  forwardRef,
} from '@angular/core';
import {
  CheckboxControlValueAccessor,
  DefaultValueAccessor,
  NG_VALUE_ACCESSOR,
  RadioControlValueAccessor,
} from '@angular/forms';

@Directive({
  providers: [{
    multi: true,
    provide: NG_VALUE_ACCESSOR,
    useExisting: forwardRef(() => SynDefaultValueAccessor),
  }],
  selector: `syn-dropdown[formControlName], syn-dropdown[formControl], syn-dropdown[ngModel],
    syn-input[formControlName], syn-input[formControl], syn-input[ngModel],
    syn-textarea[formControlName], syn-textarea[formControl], syn-textarea[ngModel],
    syn-range[formControlName], syn-range[formControl], syn-range[ngModel],
    syn-select[formControlName], syn-select[formControl], syn-select[ngModel]`,
})
export class SynDefaultValueAccessor extends DefaultValueAccessor { }

@Directive({
  providers: [{
    multi: true,
    provide: NG_VALUE_ACCESSOR,
    useExisting: forwardRef(() => SynCheckboxControlValueAccessor),
  }],
  selector: 'syn-checkbox[formControlName], syn-checkbox[formControl], syn-checkbox[ngModel]',
})
export class SynCheckboxControlValueAccessor extends CheckboxControlValueAccessor { }

@Directive({
  providers: [{
    multi: true,
    provide: NG_VALUE_ACCESSOR,
    useExisting: forwardRef(() => SynRadioControlValueAccessor),
  }],
  selector: `syn-radio[formControlName], syn-radio[formControl], syn-radio[ngModel],
    syn-radio-button[formControlName], syn-radio-button[formControl], syn-radio-button[ngModel],
    syn-radio-group[formControlName], syn-radio-group[formControl], syn-radio-group[ngModel]`,
})
export class SynRadioControlValueAccessor extends RadioControlValueAccessor { }

@NgModule({
  declarations: [
    SynDefaultValueAccessor,
    SynCheckboxControlValueAccessor,
    SynRadioControlValueAccessor,
  ],
  exports: [
    SynDefaultValueAccessor,
    SynCheckboxControlValueAccessor,
    SynRadioControlValueAccessor,
  ],
  imports: [],
})
export class SynergyFormsModule {}
