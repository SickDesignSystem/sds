// ---------------------------------------------------------------------
// ðŸ”’ AUTOGENERATED @synergy-design-system/angular wrappers for @synergy-design-system/components
// Please do not edit this file directly!
// It will get recreated when running pnpm build.
// ---------------------------------------------------------------------
import {
  Directive,
  NgModule,
  forwardRef,
} from '@angular/core';
import {
  CheckboxControlValueAccessor,
  DefaultValueAccessor,
  NG_VALUE_ACCESSOR,
} from '@angular/forms';

@Directive({
  providers: [{
    multi: true,
    provide: NG_VALUE_ACCESSOR,
    useExisting: forwardRef(() => SynDefaultValueAccessor),
  }],
  selector: `syn-dropdown[formControlName], syn-dropdown[formControl], syn-dropdown[ngModel],
    syn-input[formControlName], syn-input[formControl], syn-input[ngModel],
    syn-textarea[formControlName], syn-textarea[formControl], syn-textarea[ngModel],
    syn-range[formControlName], syn-range[formControl], syn-range[ngModel],
    syn-select[formControlName], syn-select[formControl], syn-select[ngModel],
    syn-radio-group[formControlName], syn-radio-group[formControl], syn-radio-group[ngModel],
    syn-button-group[formControlName], syn-button-group[formControl], syn-button-group[ngModel]`,
  host: {
    // Overwrite the input event, because we only emit syn-input event
    '(syn-input)': '$any(this)._handleInput($event.target.value)',
    '(blur)': 'onTouched()',
    '(compositionstart)': '$any(this)._compositionStart()',
    '(compositionend)': '$any(this)._compositionEnd($event.target.value)',
  },
})
export class SynDefaultValueAccessor extends DefaultValueAccessor { }

@Directive({
  providers: [{
    multi: true,
    provide: NG_VALUE_ACCESSOR,
    useExisting: forwardRef(() => SynCheckedValueAccessor),
  }],
  selector: `syn-checkbox[formControlName], syn-checkbox[formControl], syn-checkbox[ngModel],
    syn-switch[formControlName], syn-switch[formControl], syn-switch[ngModel]`,
  // Overwrite the change event, because we only emit syn-change event
  host: { '(syn-change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },
})
export class SynCheckedValueAccessor extends CheckboxControlValueAccessor { }

@NgModule({
  declarations: [
    SynDefaultValueAccessor,
    SynCheckedValueAccessor,
  ],
  exports: [
    SynDefaultValueAccessor,
    SynCheckedValueAccessor,
  ],
  imports: [],
})
export class SynergyFormsModule {}
